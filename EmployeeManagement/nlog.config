<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\EMSLog\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>
	
	<!-- the targets to write to -->
	<targets async="true">
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="c:\EMSLog\nlog-AspNetCore-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="c:\EMSLog\nlog-AspNetCore-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />

		<target xsi:type="Null" name="blackhole" />
        
        <target name="database" xsi:type="Database" >

            <connectionString>${gdc:item=connectionString}</connectionString>

			<commandText>
				insert into dbo.LogEntries 
				(CallSite, Date, Exception, Level, Logger, MachineName, Message, StackTrace, Thread, Username)
				values 
				(@CallSite, @Date, @Exception, @Level, @Logger, @MachineName, @Message, @StackTrace, @Thread, @Username);
			</commandText>
			
			<parameter name="@CallSite" layout="${callsite:filename=true}" />
			<parameter name="@Date" layout="${longdate}" />
			<parameter name="@Exception" layout="${exception}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Logger" layout="${logger}" />
			<parameter name="@MachineName" layout="${machinename}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@StackTrace" layout="${stacktrace}" />
			<parameter name="@Thread" layout="${threadid}" />
			<parameter name="@Username" layout="${windows-identity:domain=true}" />
      
		</target>
	
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />
	</rules>
</nlog>
